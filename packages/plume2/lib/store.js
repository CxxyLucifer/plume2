"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var immutable_1 = require("immutable");
var react_dom_1 = __importDefault(require("react-dom"));
var ql_1 = require("./ql");
var type_1 = require("./type");
/**
 * ÊòØ‰∏çÊòØÂèØ‰ª•ÊâπÈáèÂ§ÑÁêÜ
 * ReactDOM'sunstable_batchedUpdatesÂèØ‰ª•ÂæàÈÖ∑ÁöÑËß£ÂÜ≥Áà∂Â≠êÁªÑ‰ª∂Á∫ßËÅîÊ∏≤ÊüìÁöÑÈóÆÈ¢ò
 * ÂèØÊÉúPreact‰∏çÊîØÊåÅÔºåÂè™ËÉΩÈù†ImmutableÁöÑ‰∏çÂèØÂèòËøô‰∏™ÁâπÊÄßÊù•Êå°ÁùÄ‰∫Ü
 */
var batchedUpdates = react_dom_1.default.unstable_batchedUpdates ||
    function (cb) {
        cb();
    };
/**
 * StoreÁä∂ÊÄÅÂÆπÂô®
 * Êï¥‰∏™Â∫îÁî®‰∏≠ÂøÉÁöÑÁä∂ÊÄÅÁÆ°ÁêÜ ÊéßÂà∂Êï¥‰∏™Â∫îÁî®ÁöÑÁä∂ÊÄÅÊéßÂà∂
 * Store = f(Actor, ViewAction)
 */
var Store = /** @class */ (function () {
    function Store(props) {
        var _this = this;
        /**
         * ËÆ°ÁÆóquerylang
         * @param ql querylang
         */
        this.bigQuery = function (ql) {
            //Â¶ÇÊûúÂΩìÂâçÁöÑÊü•ËØ¢ÂèÇÊï∞ÊòØÂ≠óÁ¨¶‰∏≤ÔºåÁõ¥Êé•Ëé∑ÂèñÁä∂ÊÄÅÂØπÂ∫îÁöÑË∑ØÂæÑÂèÇÊï∞
            if (type_1.isString(ql)) {
                return _this._state.get(ql);
            }
            if (type_1.isArray(ql)) {
                return _this._state.getIn(ql);
            }
            if (!(ql instanceof ql_1.QueryLang)) {
                throw new Error('invalid QL');
            }
            //Êï∞ÊçÆÊòØÂê¶ËøáÊúü,ÈªòËÆ§Âê¶
            var outdate = false;
            var id = ql.id();
            var name = ql.name();
            //Ëé∑ÂèñÁºìÂ≠òÊï∞ÊçÆÁªìÊûÑ
            _this._cacheQL[id] = _this._cacheQL[id] || [];
            //copy lang
            var lang = ql.lang().slice();
            //reactive function
            var rxFn = lang.pop();
            //will drop on production env
            if (process.env.NODE_ENV != 'production') {
                if (_this._opts.debug) {
                    console.groupCollapsed &&
                        console.groupCollapsed("\uD83D\uDD25:tracing: QL(" + name + ")");
                }
            }
            var args = lang.map(function (elem, index) {
                if (elem instanceof ql_1.QueryLang) {
                    var value = _this.bigQuery(elem);
                    if (value != _this._cacheQL[id][index]) {
                        outdate = true;
                        _this._cacheQL[id][index] = value;
                    }
                    if (process.env.NODE_ENV != 'production') {
                        if (_this._opts.debug) {
                            console.log("dep:" + elem.name() + ", cache:" + !outdate + ",value:" + JSON.stringify(value, null, 2));
                        }
                    }
                    return value;
                }
                else {
                    var value = type_1.isArray(elem)
                        ? _this._state.getIn(elem)
                        : _this._state.get(elem);
                    if (_this._cacheQL[id].length == 0 ||
                        value != _this._cacheQL[id][index]) {
                        outdate = true;
                        _this._cacheQL[id][index] = value;
                    }
                    if (process.env.NODE_ENV != 'production') {
                        if (_this._opts.debug) {
                            console.log("dep:" + elem + ", cache:" + !outdate + ", value:" + JSON.stringify(value, null, 2));
                        }
                    }
                    return value;
                }
            });
            //Â¶ÇÊûúÊï∞ÊçÆËøáÊúüÔºåÈáçÊñ∞ËÆ°ÁÆó‰∏ÄÊ¨°
            if (outdate) {
                var result = rxFn.apply(null, args);
                _this._cacheQL[id][args.length] = result;
                if (process.env.NODE_ENV != 'production') {
                    if (_this._opts.debug) {
                        console.log("QL(" + name + ")|> " + JSON.stringify(result, null, 2));
                        console.groupEnd && console.groupEnd();
                    }
                }
                return result;
            }
            else {
                if (process.env.NODE_ENV != 'production') {
                    if (_this._opts.debug) {
                        console.log("\uD83D\uDE80:QL(" + name + "), cache: true, result: " + JSON.stringify(_this._cacheQL[id][args.length], null, 2));
                        console.groupEnd && console.groupEnd();
                    }
                }
                //ËøîÂõûcache‰∏≠ÊúÄÂêé‰∏Ä‰∏™ÂÄº
                return _this._cacheQL[id][args.length];
            }
        };
        //====================private method==========================
        this._initViewAction = function () {
            var viewActionMapper = _this.bindViewAction() || {};
            var keys = Object.keys(viewActionMapper);
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var key = keys_1[_i];
                //get current ViewAction class
                var ViewAction = viewActionMapper[key];
                //init and pass current to viewAction
                var viewAction = new ViewAction();
                viewAction._bindStore(_this);
                _this.viewAction[key] = viewAction;
            }
        };
        this._opts = props || { debug: false };
        this._state = immutable_1.fromJS({});
        this._actorsState = [];
        this._callbacks = [];
        this._cacheQL = {};
        this._isInTranstion = false;
        this._reduceActorState();
        this.viewAction = {};
        this._initViewAction();
    }
    //==================public method ==================
    /**
     * ÁªëÂÆöActor
     */
    Store.prototype.bindActor = function () {
        return [];
    };
    /**
     * ÁªëÂÆöViewAction
     */
    Store.prototype.bindViewAction = function () {
        return {};
    };
    /**
     * storeÂàÜÂèë‰∫ã‰ª∂ÂçèÂêåactor
     *
     * @param msg ‰∫ã‰ª∂ÂêçÁß∞
     * @param params  ÂèÇÊï∞
     */
    Store.prototype.dispatch = function (msg, params) {
        var newStoreState = this._dispatchActor(msg, params);
        //Â¶ÇÊûúÂèëÁîüstoreÁöÑÁä∂ÊÄÅÂèòÂåñ
        if (newStoreState != this._state) {
            this._state = newStoreState;
            //Â¶ÇÊûúÂú®dispatch‰∏çÂú®transationÂÜÖÔºåÈÄöÁü•UIÂéªre-render
            if (!this._isInTranstion) {
                this._notifier();
            }
        }
    };
    /**
     * ‰∫ãÂä°ÊéßÂà∂dispatch
     *
     * @param dispatch Ë¶ÅÊâßË°åÁöÑdispatchÁöÑÊ≠£Â∏∏ÈÄªËæë
     * @param rollBack ÂèëÁîürollback‰πãÂêéÁöÑËá™ÂÆö‰πâÈÄªËæë
     * @return ÊòØ‰∏çÊòØÂèëÁîü‰∫ÜÈîôËØØÔºåÊï∞ÊçÆÂõûÊªö
     */
    Store.prototype.transaction = function (dispatch, rollBack) {
        //ÊúâÊ≤°Êúârollback
        var isRollback = false;
        //log
        if (process.env.NODE_ENV != 'production') {
            if (this._opts.debug) {
                console.groupCollapsed &&
                    console.groupCollapsed('::::::::::::::::üöÄ open new transaction üöÄ::::::::::::::::::');
            }
        }
        this._isInTranstion = true;
        //record current state
        var currentStoreState = this._state;
        try {
            dispatch();
        }
        catch (err) {
            //Â¶ÇÊûúÊèê‰æõ‰∫ÜrollbackÁöÑËá™ÂÆö‰πâÂõûË∞ÉÂáΩÊï∞Ôºå
            //Â∞±Ë∞ÉÁî®‰∏öÂä°Á∫ßÂà´ÁöÑrollback
            //Âê¶ÂàôÂ∞±Ëá™Âä®ÂõûÊªöÂà∞‰∏ä‰∏ÄÊ¨°ÁöÑÁä∂ÊÄÅ
            if (rollBack) {
                rollBack();
            }
            else {
                this._state = currentStoreState;
            }
            isRollback = true;
            if (process.env.NODE_ENV != 'production') {
                console.warn('üò≠, some exception occur in transaction, store state roll back');
                if (this._opts.debug) {
                    console.trace(err);
                }
            }
        }
        //fnÂâçÂêéÁä∂ÊÄÅÊúâÊ≤°ÊúâÂèëÁîüÂèòÂåñ
        if (currentStoreState != this._state) {
            this._notifier();
        }
        this._isInTranstion = false;
        //log
        if (process.env.NODE_ENV != 'production') {
            if (this._opts.debug) {
                console.groupEnd && console.groupEnd();
            }
        }
        return isRollback;
    };
    /**
     * Ëé∑ÂèñstoreÂÆπÂô®ÁöÑÊï∞ÊçÆÁä∂ÊÄÅ
     */
    Store.prototype.state = function () {
        return this._state;
    };
    /**
     *Ëé∑ÂèñÊï∞ÊçÆÁöÑÂø´Êç∑ÊñπÂºè
     */
    Store.prototype.get = function (path) {
        return this.bigQuery(path);
    };
    /**
     * ËÆæÁΩÆstoreÊï∞ÊçÆÂÆπÂô®ÁöÑÁä∂ÊÄÅÔºå‰∏ÄËà¨Áî®‰∫érollback‰πãÂêéÁöÑÁä∂ÊÄÅÊÅ¢Â§ç
     * @param state ËÆæÁΩÆstoreÁöÑÁä∂ÊÄÅ
     */
    Store.prototype.setState = function (state) {
        this._state = state;
    };
    /**
     * ÂÆö‰πâstoreÂèëÁîüÁöÑÊï∞ÊçÆÂèòÂåñ
     * @param cb ÂõûË∞ÉÂáΩÊï∞
     */
    Store.prototype.subscribe = function (cb) {
        if (typeof cb != 'function' || this._callbacks.indexOf(cb) != -1) {
            return;
        }
        this._callbacks.push(cb);
    };
    /**
     * ÂèñÊ∂àstoreÂèëÁîüÊï∞ÊçÆÂèòÂåñÁöÑËÆ¢ÈòÖ
     * @param cb ÂõûË∞ÉÂáΩÊï∞
     */
    Store.prototype.unsubscribe = function (cb) {
        var index = this._callbacks.indexOf(cb);
        if (typeof cb != 'function' || index == -1) {
            return;
        }
        this._callbacks.splice(index, 1);
    };
    Store.prototype._reduceActorState = function () {
        var _this = this;
        this._actors = [];
        var actors = this.bindActor() || [];
        this._state = this._state.withMutations(function (state) {
            for (var _i = 0, actors_1 = actors; _i < actors_1.length; _i++) {
                var actor = actors_1[_i];
                //ÊîØÊåÅbindActorÁõ¥Êé•‰º†ÈÄíActorÊú¨Ë∫´‰∏çÈúÄË¶Ånew
                if (typeof actor === 'function') {
                    actor = new actor();
                }
                _this._actors.push(actor);
                var initState = immutable_1.fromJS(actor.defaultState());
                _this._actorsState.push(initState);
                state = state.merge(initState);
            }
            return state;
        });
    };
    Store.prototype._notifier = function () {
        var _this = this;
        batchedUpdates(function () {
            _this._callbacks.forEach(function (cb) { return cb(_this._state); });
        });
    };
    Store.prototype._dispatchActor = function (msg, params) {
        var _state = this._state;
        if (process.env.NODE_ENV != 'production') {
            if (this._opts.debug) {
                console.groupCollapsed &&
                    console.groupCollapsed("store dispatch => '" + msg + "'");
                //Â¶ÇÊûúÂèÇÊï∞Â≠òÂú®
                if (typeof params !== 'undefined') {
                    if (typeof params === 'object') {
                        console.log("params|>");
                        console.dir && console.dir(params);
                    }
                    else {
                        console.log("params|> " + params);
                    }
                }
            }
        }
        for (var i = 0, len = this._actors.length; i < len; i++) {
            var actor = this._actors[i];
            var fn = actor._route[msg];
            //Â¶ÇÊûúactorÊ≤°ÊúâÂ§ÑÁêÜmsgÁöÑÊñπÊ≥ïÔºåÁõ¥Êé•Ë∑≥Ëøá
            if (!fn) {
                //log
                if (process.env.NODE_ENV != 'production') {
                    if (this._opts.debug) {
                        console.log(actor.constructor.name + " receive '" + msg + "', but no handle \uD83D\uDE2D");
                    }
                }
                continue;
            }
            //debug
            if (process.env.NODE_ENV != 'production') {
                if (this._opts.debug) {
                    console.log(actor.constructor.name + " receive => '" + msg + "'");
                }
            }
            var preActorState = this._actorsState[i];
            var newActorState = actor.receive({
                msg: msg,
                state: preActorState,
                params: params
            });
            if (preActorState != newActorState) {
                this._actorsState[i] = newActorState;
                _state = _state.merge(newActorState);
            }
        }
        if (process.env.NODE_ENV != 'production') {
            if (this._opts.debug) {
                console.groupEnd && console.groupEnd();
            }
        }
        return _state;
    };
    //=============================help method==========================
    /**
     * ÊâìÂç∞store‰∏≠ÁöÑÊï∞ÊçÆÁä∂ÊÄÅ
     */
    Store.prototype.pprint = function () {
        if (process.env.NODE_ENV != 'production') {
            console.log(JSON.stringify(this._state, null, 2));
        }
    };
    /**
     * ÊâìÂç∞store‰∏≠ÁöÑÊï∞ÊçÆÁä∂ÊÄÅÊòØ‰ªéÂì™‰∫õActor‰∏≠ËÅöÂêà
     */
    Store.prototype.pprintActor = function () {
        var _this = this;
        if (process.env.NODE_ENV != 'production') {
            var stateObj_1 = {};
            this._actors.forEach(function (actor, index) {
                var name = actor.constructor.name;
                stateObj_1[name] = _this._actorsState[index].toJS();
            });
            console.log(JSON.stringify(stateObj_1, null, 2));
        }
    };
    return Store;
}());
exports.default = Store;
